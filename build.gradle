plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'

	// Static analysis plugins.
	id 'checkstyle'
	id "com.github.spotbugs" version "4.2.0"
	id 'pmd'
}

group = 'dev.codestijl'
version = '0.1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes 'Implementation-Title': 'integration-example',
				'Main-Class': 'dev.codestijl.integrationdemo.IntegrationDemoApplication'
	}
	from {
		configurations.compileClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.apache.commons:commons-lang3:3.0'

	/* Lombok */
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'com.h2database:h2:1.4.200'
}

test {
	useJUnitPlatform()
}

// Configure Spotbugs.
spotbugs {
	ignoreFailures = false
}

spotbugsMain {
	reports {
		xml.enabled = false
		html.configure {
			enabled = true
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

spotbugsTest {
	reports {
		xml.enabled = false
		html.configure {
			enabled = true
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

// Configure PMD.
pmd {
	toolVersion = "6.27.0"
	ruleSetFiles = files("config/pmd/pmd.xml")
	ruleSets = []
}